# Created by the script cgal_create_cmake_script
# This is the CMake script for compiling a CGAL application.

cmake_minimum_required(VERSION 3.1...3.23)
project( DDT_Tests )

find_package(CGAL REQUIRED)
#find_package(Boost QUIET COMPONENTS program_options)
find_package(Boost QUIET COMPONENTS filesystem)
if(NOT TARGET Boost::filesystem)
  message(STATUS  "NOTICE: Tests requires boost filesystem and will not be compiled.")
  return()
endif()

option (USE_TBB "Use TBB " ON)
if (USE_TBB)
  find_package(TBB QUIET)
endif()

option(USE_TRACING "Tracing data written to perf.json" OFF)
if (USE_TRACING)
  add_definitions("-DCGAL_DDT_TRACING")
endif()

option (USE_VALGRIND "Slower mode that is compatible with valgrind, as described in https://github.com/CGAL/cgal/issues/3180 " OFF)
if (USE_VALGRIND)
  add_definitions("-DCGAL_ALWAYS_ROUND_TO_NEAREST")
endif()

include(CGAL_TBB_support)
if(TARGET CGAL::TBB_support)
  set(DDT_LIBRARIES ${DDT_LIBRARIES} PUBLIC CGAL::TBB_support)
endif()

option (USE_MPI "Use MPI " ON)
if (USE_MPI)
  find_package(MPI)
  if ( MPI_FOUND )
    include_directories(SYSTEM ${MPI_INCLUDE_PATH})
    add_definitions("-DCGAL_LINKED_WITH_MPI=1")
    set(DDT_LIBRARIES ${DDT_LIBRARIES} PUBLIC ${MPI_CXX_LIBRARIES})
  else()
    message(STATUS "NOTICE: MPI library not found, MPI support is thus disabled.")
  endif()
endif()

find_package(Eigen3)
include(CGAL_Eigen3_support)
if(NOT TARGET CGAL::Eigen3_support)
  message(STATUS  "NOTICE: Some tests requires Eigen3 and will not be compiled.")
else()
  create_single_source_cgal_program( "test_DDT_traits_d.cpp" )
  create_single_source_cgal_program( "test_DDT_traits_d2.cpp" )
  create_single_source_cgal_program( "test_DDT_traits_d3.cpp" )
  create_single_source_cgal_program( "test_DDT_traits_d4.cpp" )
  create_single_source_cgal_program( "test_DDT.cpp" )
  target_link_libraries(test_DDT_traits_d  PUBLIC CGAL::Eigen3_support PRIVATE Boost::filesystem ${DDT_LIBRARIES})
  target_link_libraries(test_DDT_traits_d2 PUBLIC CGAL::Eigen3_support PRIVATE Boost::filesystem ${DDT_LIBRARIES})
  target_link_libraries(test_DDT_traits_d3 PUBLIC CGAL::Eigen3_support PRIVATE Boost::filesystem ${DDT_LIBRARIES})
  target_link_libraries(test_DDT_traits_d4 PUBLIC CGAL::Eigen3_support PRIVATE Boost::filesystem ${DDT_LIBRARIES})
  target_link_libraries(test_DDT PUBLIC CGAL::Eigen3_support PRIVATE Boost::filesystem ${DDT_LIBRARIES})
endif()

create_single_source_cgal_program( "test_DDT_traits_concept.cpp" )
include_directories(SYSTEM "include/")
include_directories(SYSTEM "../../doc/DDT/")
target_compile_options(test_DDT_traits_concept PRIVATE -Wno-unused-parameter)

create_single_source_cgal_program( "test_DDT_traits_2.cpp" )
create_single_source_cgal_program( "test_DDT_traits_3.cpp" )
target_link_libraries(test_DDT_traits_concept PRIVATE Boost::filesystem ${DDT_LIBRARIES})
target_link_libraries(test_DDT_traits_2 PRIVATE Boost::filesystem ${DDT_LIBRARIES})
target_link_libraries(test_DDT_traits_3 PRIVATE Boost::filesystem ${DDT_LIBRARIES})

create_single_source_cgal_program( "test_selector.cpp" )
